apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
    app: {{ template "chart.name" . }}
    chart: {{ template "chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "chart.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "chart.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: codebase
          image: "{{ .Values.image.codebase.repository }}:{{ .Values.image.codebase.tag }}"
          imagePullPolicy: {{ .Values.image.codebase.pullPolicy }}
          command: ["sh", "-c", 'cp -a /var/www/app/. /app']
          volumeMounts:
            - name: codebase
              mountPath: /app
      containers:
        - name: php-fpm
          image: "{{ .Values.image.php.repository }}:{{ .Values.image.php.tag }}"
          imagePullPolicy: {{ .Values.image.php.pullPolicy }}
          env:
            - name: APP_ENV
              value: prod
            - name: APP_DEBUG
              value: "0"
          resources:
{{ toYaml .Values.resources.php | indent 12 }}
          volumeMounts:
            - name: codebase
              mountPath: /var/www/app
        - name: nginx
          image: "{{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}"
          imagePullPolicy: {{ .Values.image.nginx.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources.nginx | indent 12 }}
          volumeMounts:
            - name: nginx-site
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: site.conf
            - name: codebase
              mountPath: /var/www/app
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: codebase
          emptyDir: {}
        - name: nginx-site
          configMap:
            name: {{ template "chart.fullname" . }}
            items:
              - key: site.conf
                path: site.conf
